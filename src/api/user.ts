/**
 * This file was generated by farrow-api
 * Don't modify it manually
 */

import { createApiPipelineWithUrl, ApiInvokeOptions } from 'farrow-api-client'

/**
 * {@label LoginInput}
 */
export type LoginInput = {
  username: string
  password: string
}

/**
 * {@label LoginOutput}
 */
export type LoginOutput = {
  data: LoginSuccess | UserNotFound | PasswordError
}

/**
 * {@label LoginSuccess}
 */
export type LoginSuccess = {
  __typename: 'LOGIN_SUCCESS'
  token: string
}

/**
 * {@label UserNotFound}
 */
export type UserNotFound = {
  __typename: 'USER_NOT_FOUND'
  message: string
  username: string
}

/**
 * {@label PasswordError}
 */
export type PasswordError = {
  __typename: 'PASSWORD_ERROR'
  message: string
}

/**
 * {@label CreateUserInput}
 */
export type CreateUserInput = {
  username: string
  email: string | null | undefined
  password: string
  avatar: string | null | undefined
}

/**
 * {@label CreatedUserSuccess}
 */
export type CreatedUserSuccess = {
  type: 'CREATE_USER_SUCCESS'
  user: MaskUser
}

/**
 * {@label CreateUserExist}
 */
export type CreateUserExist = {
  type: 'CREATE_USER_EXIST'
  message: string
}

/**
 * {@label CreateUserHashFailed}
 */
export type CreateUserHashFailed = {
  type: 'CREATE_USER_HASH_FAILED'
  message: string
}

/**
 * {@label MaskUser}
 */
export type MaskUser = {
  id: number
  username: string
  email: string | null | undefined
  avatar: string | null | undefined
  createdAt: string
}

/**
 * {@label GetUserInfoInput}
 */
export type GetUserInfoInput = {}

/**
 * {@label GetUserInfoSuccess}
 */
export type GetUserInfoSuccess = {
  type: 'GET_USER_INFO_SUCCESS'
  user: MaskUser
}

/**
 * {@label GetUserInfoFail}
 */
export type GetUserInfoFail = {
  type: 'GET_USER_INFO_FAIL'
  message: string
}

/**
 * {@label GetUserByIdInput}
 */
export type GetUserByIdInput = {
  id: number
}

/**
 * {@label GetUserByIdSuccess}
 */
export type GetUserByIdSuccess = {
  type: 'GET_USER_BY_ID_SUCCESS'
  user: MaskUser
}

/**
 * {@label GetUserByIdNotFound}
 */
export type GetUserByIdNotFound = {
  type: 'GET_USER_BY_ID_NOT_FOUND'
  message: string
}

export const url = 'http://localhost:3003/api/user'

export const apiPipeline = createApiPipelineWithUrl(url)

export const api = {
  /**
   * @remarks login with username and password
   */
  login: (input: LoginInput, options?: ApiInvokeOptions) =>
    apiPipeline.invoke({ type: 'Single', path: ['login'], input }, options) as Promise<LoginOutput>,
  /**
   * @remarks create an new user
   */
  createUser: (input: CreateUserInput, options?: ApiInvokeOptions) =>
    apiPipeline.invoke({ type: 'Single', path: ['createUser'], input }, options) as Promise<
      CreatedUserSuccess | CreateUserExist | CreateUserHashFailed
    >,
  /**
   * @remarks get user info
   */
  getUserInfo: (input: GetUserInfoInput, options?: ApiInvokeOptions) =>
    apiPipeline.invoke({ type: 'Single', path: ['getUserInfo'], input }, options) as Promise<
      GetUserInfoSuccess | GetUserInfoFail
    >,
  /**
   * @remarks get user by id
   */
  getUserById: (input: GetUserByIdInput, options?: ApiInvokeOptions) =>
    apiPipeline.invoke({ type: 'Single', path: ['getUserById'], input }, options) as Promise<
      GetUserByIdSuccess | GetUserByIdNotFound
    >,
}
