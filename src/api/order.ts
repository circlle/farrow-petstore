/**
 * This file was generated by farrow-api
 * Don't modify it manually
 */

import { createApiPipelineWithUrl } from 'farrow-api-client'

/**
 * {@label CreateOrderInput}
 */
export type CreateOrderInput = {
  petId: number
}

/**
 * {@label InvalidUser}
 */
export type InvalidUser = {
  type: 'INVALID_USER'
  message: string
}

/**
 * {@label CreateOrderSuccess}
 */
export type CreateOrderSuccess = {
  type: 'CREATE_ORDER_SUCCESS'
  order: SimpleOrder
}

/**
 * {@label SimpleOrder}
 */
export type SimpleOrder = {
  id: number
  petId: number
  userId: number
  shipDate: string
  complete: boolean
  status: 'NEW' | 'CONFIRMED' | 'DELETED'
}

/**
 * {@label GetOrderListInput}
 */
export type GetOrderListInput = {
  pageIndex: number | null | undefined
  pageSize: number | null | undefined
}

/**
 * {@label GetOrderListSuccess}
 */
export type GetOrderListSuccess = {
  type: 'GET_ORDER_LIST_SUCCESS'
  list: Order[]
  pagination: Pagination
}

/**
 * {@label GetOrderListUserInvalid}
 */
export type GetOrderListUserInvalid = {
  type: 'USER_NOT_VALID'
  message: string
}

/**
 * {@label Order}
 */
export type Order = {
  id: number
  petId: number
  userId: number
  shipDate: string
  complete: boolean
  user: MaskUser
  pet: MaskPet
  status: 'NEW' | 'CONFIRMED' | 'DELETED'
}

/**
 * {@label Pagination}
 */
export type Pagination = {
  total: number
  count: number
  pageSize: number
  pageIndex: number
}

/**
 * {@label MaskUser}
 */
export type MaskUser = {
  id: number
  username: string
  email: string | null | undefined
  avatar: string | null | undefined
  createdAt: string
}

/**
 * {@label MaskPet}
 */
export type MaskPet = {
  id: number
  name: string
  price: number
  description: string
  categoryId: number | null | undefined
  category: Category | null | undefined
  photos: PetPhoto[]
  status: 'AVAILABLE' | 'PENDING' | 'SOLD' | null | undefined
}

/**
 * {@label Category}
 */
export type Category = {
  /**
   * @remarks The id of category
   */
  id: number
  /**
   * @remarks The name of category
   */
  name: string
  /**
   * @remarks category description
   */
  description: string
  /**
   * @remarks category photo
   */
  image: string
}

/**
 * {@label PetPhoto}
 */
export type PetPhoto = {
  id: number
  petId: number
  url: string
}

/**
 * {@label ConfirmOrderInput}
 */
export type ConfirmOrderInput = {
  petId: number
}

/**
 * {@label ConfirmOrderFailed}
 */
export type ConfirmOrderFailed = {
  type: 'CONFIRM_ORDER_FAILED'
  message: string
}

/**
 * {@label ConfirmOrderSuccess}
 */
export type ConfirmOrderSuccess = {
  type: 'CONRIRM_ORDER_SUCCESS'
  order: Order
}

/**
 * {@label DeleteOrderInput}
 */
export type DeleteOrderInput = {
  petId: number
}

/**
 * {@label DeleteOrderFailed}
 */
export type DeleteOrderFailed = {
  type: 'DELETE_ORDER_FAILED'
  message: string
}

/**
 * {@label DeleteOrderSuccess}
 */
export type DeleteOrderSuccess = {
  type: 'DELETE_ORDER_SUCCESS'
  order: Order
}

export const url = 'http://localhost:3003/api/order'

export const apiPipeline = createApiPipelineWithUrl(url)

export const api = {
  /**
   * @remarks create a new order
   */
  createOrder: (input: CreateOrderInput) =>
    apiPipeline.invoke({ path: ['createOrder'], input }) as Promise<InvalidUser | CreateOrderSuccess>,
  /**
   * @remarks get order list
   */
  getOrderList: (input: GetOrderListInput) =>
    apiPipeline.invoke({ path: ['getOrderList'], input }) as Promise<GetOrderListSuccess | GetOrderListUserInvalid>,
  /**
   * @remarks confirm one order
   */
  confirmOrder: (input: ConfirmOrderInput) =>
    apiPipeline.invoke({ path: ['confirmOrder'], input }) as Promise<ConfirmOrderFailed | ConfirmOrderSuccess>,
  /**
   * @remarks delete one order
   */
  deleteOrder: (input: DeleteOrderInput) =>
    apiPipeline.invoke({ path: ['deleteOrder'], input }) as Promise<DeleteOrderFailed | DeleteOrderSuccess>,
}
