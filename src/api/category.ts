/**
 * This file was generated by farrow-api
 * Don't modify it manually
 */

import { createApiPipelineWithUrl, ApiInvokeOptions } from 'farrow-api-client'

/**
 * {@label CreateCategoryInput}
 */
export type CreateCategoryInput = {
  /**
   * @remarks The name of category
   */
  name: string
  /**
   * @remarks category description
   */
  description: string
  /**
   * @remarks category photo
   */
  image: string
}

/**
 * {@label CreateCategoryOutput}
 */
export type CreateCategoryOutput = {
  /**
   * @remarks The category
   */
  category: Category
}

/**
 * {@label Category}
 */
export type Category = {
  /**
   * @remarks The id of category
   */
  id: number
  /**
   * @remarks The name of category
   */
  name: string
  /**
   * @remarks category description
   */
  description: string
  /**
   * @remarks category photo
   */
  image: string
}

/**
 * {@label DeleteCategoryInput}
 */
export type DeleteCategoryInput = {
  /**
   * @remarks Category id for removing
   */
  id: number
}

/**
 * {@label DeleteCategoryOutput}
 */
export type DeleteCategoryOutput = {
  /**
   * @remarks Category deleted
   */
  category: Category
}

/**
 * {@label GetCategoryListInput}
 */
export type GetCategoryListInput = {
  /**
   * @remarks how many category to get
   */
  limit: number
}

/**
 * {@label GetCategoryListOutput}
 */
export type GetCategoryListOutput = {
  list: Category[]
  count: number
}

/**
 * {@label GetCategoryByIdInput}
 */
export type GetCategoryByIdInput = {
  id: number
}

/**
 * {@label GetCategoryByIdSuccess}
 */
export type GetCategoryByIdSuccess = {
  type: 'CATEGORY'
  category: Category
}

/**
 * {@label CategoryNotFound}
 */
export type CategoryNotFound = {
  type: 'CATEGORY_NOT_FOUND'
  message: string
  categoryId: number
}

export const url = 'http://localhost:3003/api/category'

export const apiPipeline = createApiPipelineWithUrl(url)

export const api = {
  /**
   * @remarks create a new category
   */
  createCategory: (input: CreateCategoryInput, options?: ApiInvokeOptions) =>
    apiPipeline.invoke({ type: 'Single', path: ['createCategory'], input }, options) as Promise<CreateCategoryOutput>,
  /**
   * @remarks delete one category
   */
  deleteCategory: (input: DeleteCategoryInput, options?: ApiInvokeOptions) =>
    apiPipeline.invoke({ type: 'Single', path: ['deleteCategory'], input }, options) as Promise<DeleteCategoryOutput>,
  /**
   * @remarks get category list
   */
  getCategoryList: (input: GetCategoryListInput, options?: ApiInvokeOptions) =>
    apiPipeline.invoke({ type: 'Single', path: ['getCategoryList'], input }, options) as Promise<GetCategoryListOutput>,
  /**
   * @remarks get category by id
   */
  getCategoryById: (input: GetCategoryByIdInput, options?: ApiInvokeOptions) =>
    apiPipeline.invoke({ type: 'Single', path: ['getCategoryById'], input }, options) as Promise<
      GetCategoryByIdSuccess | CategoryNotFound
    >,
}
